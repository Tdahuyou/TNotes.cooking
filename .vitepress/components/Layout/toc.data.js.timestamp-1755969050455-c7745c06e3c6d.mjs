// .vitepress/components/Layout/toc.data.js
import fs from "node:fs";
var toc_data_default = {
  watch: ["../../../TOC.md"],
  load(watchedFiles) {
    let tocData = {};
    watchedFiles.forEach((file) => {
      const fileContent = fs.readFileSync(file, "utf-8");
      const doneNotesID = getDoneNotesID(fileContent);
      const doneNotesLen = doneNotesID.length;
      tocData = {
        fileContent,
        doneNotesID,
        doneNotesLen
      };
    });
    return tocData;
  }
};
function getDoneNotesID(fileContent) {
  const matches = fileContent.match(/- \[x\]\s\[(\d{4})\./g);
  return matches ? [...new Set(matches.map((match) => match.slice(-5, -1)))] : [];
}
export {
  toc_data_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLnZpdGVwcmVzcy9jb21wb25lbnRzL0xheW91dC90b2MuZGF0YS5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIi9Vc2Vycy9odXlvdWRhL3ptL25vdGVzL1ROb3Rlcy5jb29raW5nLy52aXRlcHJlc3MvY29tcG9uZW50cy9MYXlvdXRcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9Vc2Vycy9odXlvdWRhL3ptL25vdGVzL1ROb3Rlcy5jb29raW5nLy52aXRlcHJlc3MvY29tcG9uZW50cy9MYXlvdXQvdG9jLmRhdGEuanNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL1VzZXJzL2h1eW91ZGEvem0vbm90ZXMvVE5vdGVzLmNvb2tpbmcvLnZpdGVwcmVzcy9jb21wb25lbnRzL0xheW91dC90b2MuZGF0YS5qc1wiOy8vIC52aXRlcHJlc3MvY29tcG9uZW50cy9MYXlvdXQvdG9jLmRhdGEuanNcbmltcG9ydCBmcyBmcm9tICdub2RlOmZzJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHdhdGNoOiBbJy4uLy4uLy4uL1RPQy5tZCddLFxuICBsb2FkKHdhdGNoZWRGaWxlcykge1xuICAgIGxldCB0b2NEYXRhID0ge31cbiAgICB3YXRjaGVkRmlsZXMuZm9yRWFjaCgoZmlsZSkgPT4ge1xuICAgICAgLy8gY29uc29sZS5sb2coJ2ZpbGU6JywgZmlsZSkgLy8gPT4gZmlsZTogVE9DLm1kXG5cbiAgICAgIGNvbnN0IGZpbGVDb250ZW50ID0gZnMucmVhZEZpbGVTeW5jKGZpbGUsICd1dGYtOCcpXG4gICAgICBjb25zdCBkb25lTm90ZXNJRCA9IGdldERvbmVOb3Rlc0lEKGZpbGVDb250ZW50KVxuICAgICAgY29uc3QgZG9uZU5vdGVzTGVuID0gZG9uZU5vdGVzSUQubGVuZ3RoXG5cbiAgICAgIHRvY0RhdGEgPSB7XG4gICAgICAgIGZpbGVDb250ZW50LFxuICAgICAgICBkb25lTm90ZXNJRCxcbiAgICAgICAgZG9uZU5vdGVzTGVuLFxuICAgICAgfVxuICAgIH0pXG4gICAgcmV0dXJuIHRvY0RhdGFcbiAgfSxcbn1cblxuLyoqXG4gKiBcdThGRDRcdTU2REVcdTVERjJcdTVCOENcdTYyMTBcdTc2ODRcdTdCMTRcdThCQjBcdTc2ODQgSUQgXHU1MjE3XHU4ODY4XG4gKiBAcGFyYW0ge3N0cmluZ30gZmlsZUNvbnRlbnQgXHU2NTg3XHU0RUY2XHU1MTg1XHU1QkI5XG4gKiBAcmV0dXJucyBcdTVERjJcdTVCOENcdTYyMTBcdTc2ODRcdTdCMTRcdThCQjBcdTc2ODQgSUQgXHU1MjE3XHU4ODY4XG4gKi9cbmZ1bmN0aW9uIGdldERvbmVOb3Rlc0lEKGZpbGVDb250ZW50KSB7XG4gIGNvbnN0IG1hdGNoZXMgPSBmaWxlQ29udGVudC5tYXRjaCgvLSBcXFt4XFxdXFxzXFxbKFxcZHs0fSlcXC4vZylcbiAgcmV0dXJuIG1hdGNoZXNcbiAgICA/IFsuLi5uZXcgU2V0KG1hdGNoZXMubWFwKChtYXRjaCkgPT4gbWF0Y2guc2xpY2UoLTUsIC0xKSkpXVxuICAgIDogW11cbn1cbiJdLAogICJtYXBwaW5ncyI6ICI7QUFDQSxPQUFPLFFBQVE7QUFFZixJQUFPLG1CQUFRO0FBQUEsRUFDYixPQUFPLENBQUMsaUJBQWlCO0FBQUEsRUFDekIsS0FBSyxjQUFjO0FBQ2pCLFFBQUksVUFBVSxDQUFDO0FBQ2YsaUJBQWEsUUFBUSxDQUFDLFNBQVM7QUFHN0IsWUFBTSxjQUFjLEdBQUcsYUFBYSxNQUFNLE9BQU87QUFDakQsWUFBTSxjQUFjLGVBQWUsV0FBVztBQUM5QyxZQUFNLGVBQWUsWUFBWTtBQUVqQyxnQkFBVTtBQUFBLFFBQ1I7QUFBQSxRQUNBO0FBQUEsUUFDQTtBQUFBLE1BQ0Y7QUFBQSxJQUNGLENBQUM7QUFDRCxXQUFPO0FBQUEsRUFDVDtBQUNGO0FBT0EsU0FBUyxlQUFlLGFBQWE7QUFDbkMsUUFBTSxVQUFVLFlBQVksTUFBTSx1QkFBdUI7QUFDekQsU0FBTyxVQUNILENBQUMsR0FBRyxJQUFJLElBQUksUUFBUSxJQUFJLENBQUMsVUFBVSxNQUFNLE1BQU0sSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQ3hELENBQUM7QUFDUDsiLAogICJuYW1lcyI6IFtdCn0K
